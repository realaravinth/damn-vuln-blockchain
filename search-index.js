var searchIndex = JSON.parse('{\
"damn_vuln_blockchain":{"doc":"This is a test blockchain that I build for fun and as the…","i":[[0,"asset","damn_vuln_blockchain","",null,null],[3,"Asset","damn_vuln_blockchain::asset","",null,null],[3,"AssetLedger","","",null,null],[12,"assets","","",0,null],[3,"ChangeAssetOwner","","Changes owner of asset `ChangeOwner.0` to  `ChangeOwner.1`",null,null],[12,"asset_id","","",1,null],[12,"new_owner","","",1,null],[3,"ChangeAssetOwnerBuilder","","Builder for `ChangeAssetOwner`.",null,null],[3,"GetAssetInfo","","Get asset info of `GetAssetInfo.0`",null,null],[12,"0","","",2,null],[3,"DumpLedger","","Dumps entire ledger",null,null],[3,"ReplaceLedger","","Replaces asset ledger Useful when forking",null,null],[11,"new","","create new asset",3,[[]]],[11,"get_name","","get name of the asset",3,[[]]],[11,"get_hash","","get hash of the asset",3,[[]]],[11,"get_value","","get value/price of the asset",3,[[]]],[11,"set_owner","","set owner of the asset",3,[[]]],[11,"get_owner","","get owner of the asset",3,[[],["option",4]]],[11,"generate","","",0,[[],["assetledger",3]]],[11,"asset_id","","",4,[[["string",3]]]],[11,"new_owner","","",4,[[["string",3]]]],[11,"build","","Builds a new `ChangeAssetOwner`.",4,[[],[["changeassetowner",3],["string",3],["result",4]]]],[0,"blockchain","damn_vuln_blockchain","",null,null],[3,"BlockBuilder","damn_vuln_blockchain::blockchain","",null,null],[3,"Block","","Block. `tx`, `prev`, validator and `rx` are `Option<_>` to…",null,null],[3,"Chain","","",null,null],[3,"AddBlock","","Add Block",null,null],[3,"GetLastBlock","","Get last block",null,null],[3,"ReplaceChain","","Replace Chain",null,null],[3,"DumpLedger","","Dumps entire ledger Useful when forking: send `DumpLedger`…",null,null],[11,"set_prev","","set previous block\'s hash",5,[[["block",3]]]],[11,"set_rx","","set receiver\'s ID",5,[[]]],[11,"set_tx","","set sender\'s ID",5,[[]]],[11,"set_validator","","set validator\'s ID",5,[[]]],[11,"set_asset_id","","set assset ID",5,[[["asset",3]]]],[11,"build","","Build block, this method must be called at the very end",5,[[],["block",3]]],[11,"to_string","","Get block info as string",6,[[],["string",3]]],[11,"is_genesis","","checks if the block is a genesis block",6,[[]]],[11,"hash","","computes the hash of a block, uses the same logic for…",6,[[],["string",3]]],[11,"get_prev","","get hash of previous block",6,[[],[["string",3],["option",4]]]],[11,"get_hash","","get hash of block",6,[[]]],[11,"get_rx","","get receiver involved in the transaction that lead tot the…",6,[[],[["string",3],["option",4]]]],[11,"get_validator","","get validator involved in the creation of this block",6,[[],[["string",3],["option",4]]]],[11,"get_tx","","get sender involved in the transaction that lead tot the…",6,[[],[["string",3],["option",4]]]],[11,"new","","create new blockchain",7,[[],["chain",3]]],[11,"get_last_block","","get the last block in the chain",7,[[],["block",3]]],[11,"add_block","","add a block to the chain…",7,[[["block",3]],["chainresult",6]]],[11,"is_valid","","checks if a blockchain is valid by comparing the hash of…",7,[[["vec",3]],["chainresult",6]]],[11,"replace_chain","","",7,[[["vec",3],["block",3]],["chainresult",6]]],[0,"discovery","damn_vuln_blockchain","",null,null],[3,"Network","damn_vuln_blockchain::discovery","",null,null],[3,"AddPeer","","Add peer",null,null],[3,"DumpPeer","","Dump all peers",null,null],[3,"GetPeer","","Get peer of ID",null,null],[0,"error","damn_vuln_blockchain","",null,null],[4,"ChainError","damn_vuln_blockchain::error","Errors that can occur when interacting with the blockchain",null,null],[13,"GenesisBlockAdditionError","","when the a genesis block is passed to get added to a chain…",8,null],[13,"InvalidBlockChain","","Blockchain invalid when block.hash() != block.next().prev…",8,null],[13,"InconsistentBlockAdition","","Block inconsistent, block.hash() !=…",8,null],[4,"PeerError","","Errors that can occur when interacting with the blockchain",null,null],[13,"NotAttacker","","When a non-attacking peer is asked to attack",9,null],[13,"NotAuditor","","When a non-auditor peer is asked to mint assets",9,null],[13,"ChainError","","Blockchian error",9,null],[6,"ChainResult","","",null,null],[6,"PeerResult","","",null,null],[0,"logs","damn_vuln_blockchain","",null,null],[3,"Command","damn_vuln_blockchain::logs","",null,null],[12,"timesamp","","",10,null],[12,"action","","",10,null],[3,"Peer","","",null,null],[12,"id","","some random ID",11,null],[12,"ip","","IP must include the port as well",11,null],[3,"Gossip","","",null,null],[12,"tx","","",12,null],[12,"rx","","",12,null],[4,"Action","","",null,null],[13,"InitLog","","Initialize log",13,null],[13,"PeerConnected","","Peer connected event, pass in peer ID",13,null],[13,"PeerEnroll","","Peer connected event, pass in peer ID",13,null],[13,"MintingAsset","","Miniting asset event, pass in Asset ID",13,null],[13,"DistributingAssets","","Distributing asset `asset ID` to peer `peer  ID`",13,null],[13,"TransactionRequest","","Transaction request event from peer `peer ID` for asset…",13,null],[13,"StakeBroadcast","","Stake broadcast event from peer `peer ID` with stake",13,null],[13,"TransactionValidated","","Transaction validation event. Transaction validated by…",13,null],[13,"BlockCreation","","Block creation event for block `block ID`",13,null],[13,"TransactionBroadcasting","","Transaction broadcasting event by peer `peer ID` to peer…",13,null],[11,"new","","",10,[[["action",4]],["command",3]]],[0,"utils","damn_vuln_blockchain","",null,null],[5,"hasher","damn_vuln_blockchain::utils","helper function for generating sha256 hashes",null,[[],["string",3]]],[5,"get_rand_string","","helper function for generating random strings of length =…",null,[[],["string",3]]],[5,"get_current_time","","helper function to get current timesamp",null,[[],["string",3]]],[11,"from","damn_vuln_blockchain::asset","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","damn_vuln_blockchain::blockchain","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","damn_vuln_blockchain::discovery","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","damn_vuln_blockchain::error","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","damn_vuln_blockchain::logs","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"clone","damn_vuln_blockchain::asset","",3,[[],["asset",3]]],[11,"clone","","",0,[[],["assetledger",3]]],[11,"clone","","",4,[[],["changeassetownerbuilder",3]]],[11,"clone","damn_vuln_blockchain::blockchain","",5,[[],["blockbuilder",3]]],[11,"clone","","",6,[[],["block",3]]],[11,"clone","","",7,[[],["chain",3]]],[11,"clone","damn_vuln_blockchain::discovery","",20,[[],["network",3]]],[11,"clone","damn_vuln_blockchain::error","",8,[[],["chainerror",4]]],[11,"clone","","",9,[[],["peererror",4]]],[11,"clone","damn_vuln_blockchain::logs","",11,[[],["peer",3]]],[11,"clone","","",12,[[],["gossip",3]]],[11,"default","damn_vuln_blockchain::asset","",0,[[],["assetledger",3]]],[11,"default","","",4,[[],["changeassetownerbuilder",3]]],[11,"default","damn_vuln_blockchain::blockchain","",5,[[],["blockbuilder",3]]],[11,"default","","",6,[[],["block",3]]],[11,"default","damn_vuln_blockchain::discovery","",20,[[],["network",3]]],[11,"default","damn_vuln_blockchain::logs","",11,[[],["peer",3]]],[11,"default","","",12,[[],["gossip",3]]],[11,"eq","damn_vuln_blockchain::asset","",3,[[["asset",3]]]],[11,"ne","","",3,[[["asset",3]]]],[11,"eq","damn_vuln_blockchain::error","",8,[[["chainerror",4]]]],[11,"eq","","",9,[[["peererror",4]]]],[11,"ne","","",9,[[["peererror",4]]]],[11,"fmt","damn_vuln_blockchain::asset","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","damn_vuln_blockchain::blockchain","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","damn_vuln_blockchain::discovery","",20,[[["formatter",3]],["result",6]]],[11,"fmt","damn_vuln_blockchain::error","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","damn_vuln_blockchain::logs","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","damn_vuln_blockchain::asset","",3,[[["formatter",3]],["result",6]]],[11,"fmt","damn_vuln_blockchain::blockchain","",6,[[["formatter",3]],["result",6]]],[11,"fmt","damn_vuln_blockchain::error","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","damn_vuln_blockchain::logs","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"source","damn_vuln_blockchain::error","",9,[[],[["error",8],["option",4]]]],[11,"handle","damn_vuln_blockchain::asset","",0,[[["dumpledger",3]]]],[11,"handle","","",0,[[["getassetinfo",3]]]],[11,"handle","","",0,[[["changeassetowner",3]]]],[11,"handle","","",0,[[["replaceledger",3]]]],[11,"handle","damn_vuln_blockchain::blockchain","",7,[[["addblock",3]]]],[11,"handle","","",7,[[["getlastblock",3]]]],[11,"handle","","",7,[[["replacechain",3]]]],[11,"handle","","",7,[[["dumpledger",3]]]],[11,"handle","damn_vuln_blockchain::discovery","",20,[[["addpeer",3]]]],[11,"handle","","",20,[[["getpeer",3]]]],[11,"handle","","",20,[[["dumppeer",3]]]],[11,"serialize","damn_vuln_blockchain::asset","",3,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","damn_vuln_blockchain::blockchain","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","damn_vuln_blockchain::discovery","",20,[[],["result",4]]],[11,"serialize","damn_vuln_blockchain::logs","",11,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"deserialize","damn_vuln_blockchain::asset","",3,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","damn_vuln_blockchain::blockchain","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","damn_vuln_blockchain::discovery","",20,[[],["result",4]]],[11,"deserialize","damn_vuln_blockchain::logs","",10,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]]],"p":[[3,"AssetLedger"],[3,"ChangeAssetOwner"],[3,"GetAssetInfo"],[3,"Asset"],[3,"ChangeAssetOwnerBuilder"],[3,"BlockBuilder"],[3,"Block"],[3,"Chain"],[4,"ChainError"],[4,"PeerError"],[3,"Command"],[3,"Peer"],[3,"Gossip"],[4,"Action"],[3,"DumpLedger"],[3,"ReplaceLedger"],[3,"AddBlock"],[3,"GetLastBlock"],[3,"ReplaceChain"],[3,"DumpLedger"],[3,"Network"],[3,"AddPeer"],[3,"DumpPeer"],[3,"GetPeer"]]},\
"dwb":{"doc":"","i":[[3,"Config","dwb","",null,null],[12,"mode","","",0,null],[12,"peer_id","","",0,null],[12,"port","","",0,null],[12,"asset_addr","","",0,null],[12,"chain_addr","","",0,null],[12,"tampered_chain_addr","","",0,null],[4,"Mode","","",null,null],[13,"Auditor","","",1,null],[13,"Attacker","","",1,null],[13,"Victim","","",1,null],[5,"main","","",null,[[],["result",6]]],[5,"get_json_err","","",null,[[],["jsonconfig",3]]],[5,"cli","","",null,[[],["config",3]]],[0,"routes","","",null,null],[3,"peer_enroll","dwb::routes","",null,null],[5,"services","","",null,[[["serviceconfig",3]]]],[11,"from","dwb","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","dwb::routes","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"clone","dwb","",0,[[],["config",3]]],[11,"clone","","",1,[[],["mode",4]]],[11,"register","dwb::routes","",2,[[["appservice",3]]]]],"p":[[3,"Config"],[4,"Mode"],[3,"peer_enroll"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);